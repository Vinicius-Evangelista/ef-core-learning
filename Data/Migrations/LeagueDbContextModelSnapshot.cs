// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(LeagueDbContext))]
    partial class LeagueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coachs");

                    b.HasData(
                        new
                        {
                            Id = 99,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(6669),
                            Name = "Treinador1"
                        },
                        new
                        {
                            Id = 198,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(6680),
                            Name = "Treinador2"
                        },
                        new
                        {
                            Id = 297,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(6681),
                            Name = "Treinador3"
                        },
                        new
                        {
                            Id = 396,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(6682),
                            Name = "Treinador4"
                        },
                        new
                        {
                            Id = 495,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(6683),
                            Name = "Treinador5"
                        },
                        new
                        {
                            Id = 594,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(6684),
                            Name = "Treinador6"
                        });
                });

            modelBuilder.Entity("Domain.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("League");

                    b.HasData(
                        new
                        {
                            Id = 500,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(8324),
                            Name = "La Liga"
                        });
                });

            modelBuilder.Entity("Domain.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeagueId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoachId")
                        .IsUnique();

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoachId = 99,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(9629),
                            LeagueId = 500,
                            Name = "Real Madrid"
                        },
                        new
                        {
                            Id = 2,
                            CoachId = 198,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(9633),
                            LeagueId = 500,
                            Name = "Chelsea"
                        },
                        new
                        {
                            Id = 3,
                            CoachId = 396,
                            CreatDate = new DateTime(2024, 2, 8, 9, 59, 35, 965, DateTimeKind.Local).AddTicks(9634),
                            LeagueId = 500,
                            Name = "Barcelona"
                        });
                });

            modelBuilder.Entity("Domain.Team", b =>
                {
                    b.HasOne("Domain.Coach", "Coach")
                        .WithOne("Team")
                        .HasForeignKey("Domain.Team", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId");

                    b.Navigation("Coach");

                    b.Navigation("League");
                });

            modelBuilder.Entity("Domain.Coach", b =>
                {
                    b.Navigation("Team");
                });

            modelBuilder.Entity("Domain.League", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
