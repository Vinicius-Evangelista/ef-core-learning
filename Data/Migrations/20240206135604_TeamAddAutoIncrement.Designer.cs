// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(LeagueDbContext))]
    [Migration("20240206135604_TeamAddAutoIncrement")]
    partial class TeamAddAutoIncrement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coachs");
                });

            modelBuilder.Entity("Domain.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            CreatDate = new DateTime(2024, 2, 6, 10, 56, 4, 265, DateTimeKind.Local).AddTicks(2717),
                            Name = "Real Madrid"
                        },
                        new
                        {
                            TeamId = 2,
                            CreatDate = new DateTime(2024, 2, 6, 10, 56, 4, 265, DateTimeKind.Local).AddTicks(2728),
                            Name = "Chelsea"
                        },
                        new
                        {
                            TeamId = 3,
                            CreatDate = new DateTime(2024, 2, 6, 10, 56, 4, 265, DateTimeKind.Local).AddTicks(2730),
                            Name = "Barcelona"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
